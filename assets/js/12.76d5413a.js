(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{494:function(t,s,a){"use strict";a.r(s);var n=a(9),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"使用-github-actions-自动部署博客"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-github-actions-自动部署博客"}},[t._v("#")]),t._v(" 使用 GitHub Actions 自动部署博客")]),t._v(" "),a("p",[t._v("在手动部署 "),a("code",[t._v("gh-pages")]),t._v(" 的基础上，我们可以通过 "),a("code",[t._v("GitHub Actions")]),t._v(" 来实现自动部署，也就是不需要通过手动在本地执行命令，只需要提交代码，然后 "),a("code",[t._v("GitHub Actions")]),t._v(" 自动执行部署即可")]),t._v(" "),a("h2",{attrs:{id:"设置-secrets"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置-secrets"}},[t._v("#")]),t._v(" 设置 Secrets")]),t._v(" "),a("p",[t._v("后面部署的 Action 需要有操作你的仓库的权限，因此提前设置好 GitHub personal access（个人访问令牌）")]),t._v(" "),a("p",[t._v("生成方式可以参考 Github 官方文档 "),a("a",{attrs:{href:"https://docs.github.com/cn/github/authenticating-to-github/creating-a-personal-access-token",target:"_blank",rel:"noopener noreferrer"}},[t._v("创建个人访问令牌"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("权限给 "),a("code",[t._v("repo")]),t._v(" 即可 （要使用令牌从命令行访问仓库，请选择 repo（仓库））")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Underglaze-Blue/git-img@main/uPic/actions-repo.png",alt:"actions-repo"}})]),t._v(" "),a("p",[t._v("然后在 "),a("strong",[t._v("项目的 setting")]),t._v(" 中进行 Secrets 的设置")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Underglaze-Blue/git-img@main/uPic/secrets.png",alt:"secrets"}})]),t._v(" "),a("p",[t._v("令牌的名称可以按照自己喜好起，要和后续的 "),a("code",[t._v(".yml")]),t._v(" 文件中一致，建议使用 "),a("code",[t._v("ACCESS_TOKEN")])]),t._v(" "),a("h2",{attrs:{id:"workflow-文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#workflow-文件"}},[t._v("#")]),t._v(" workflow 文件")]),t._v(" "),a("p",[t._v("GitHub Actions 的配置文件叫做 "),a("code",[t._v("workflow")]),t._v(" 文件，存放在代码仓库的.github/workflows 目录")]),t._v(" "),a("p",[t._v("创建 "),a("code",[t._v(".github/workflows/xxx.yml")]),t._v(" 文件 ， "),a("code",[t._v("xxx")]),t._v(" 为自定义名称，一个库可以有多个 "),a("code",[t._v(".yml")]),t._v(" 文件， "),a("code",[t._v(".yml")]),t._v(" 文件采用 "),a("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2016/07/yaml.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("YAML"),a("OutboundLink")],1),t._v(" 格式, 也可以参考官方文档 "),a("a",{attrs:{href:"https://docs.github.com/cn/actions/reference/workflow-syntax-for-github-actions",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub 操作的工作流程语法\n"),a("OutboundLink")],1),t._v(" ， 或者 "),a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("阮一峰老师 GitHub Actions 入门教程"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This is a basic workflow to help you get started with Actions")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" CI\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Controls when the action will run.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Triggers the workflow on push or pull request events but only for the main branch")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branches")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" main\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A workflow run is made up of one or more jobs that can run sequentially or in parallel")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# This workflow contains a single job called "build"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The type of runner that the job will run on")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Steps represent a sequence of tasks that will be executed as part of the job")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Checkout\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v2\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deploy\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置环境变量")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("GITHUB_TOKEN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.ACCESS_TOKEN "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# toKen私密变量 和 生成 Secrets 令牌的名称一致")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" npm install "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&&")]),t._v(" npm run actions "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行的命令")]),t._v("\n")])])]),a("p",[t._v("这里的工作步骤主要为")]),t._v(" "),a("ol",[a("li",[t._v("拉取代码")]),t._v(" "),a("li",[t._v("把 "),a("code",[t._v("token")]),t._v(" 设置到环境变量，安装项目依赖，并运行 "),a("code",[t._v("actions")]),t._v(" 命令")])]),t._v(" "),a("blockquote",[a("p",[t._v("所以需要先在 package.json 中添加 actions 命令")])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"dev"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vuepress dev docs"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"build"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vuepress build docs"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"actions"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sh actions.sh"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这里我个人的 "),a("code",[t._v("actions.sh")]),t._v(" 文件如下")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/usr/bin/env sh")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 确保脚本抛出遇到的错误")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" -e\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run build "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成静态文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" dist "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入生成的文件夹")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# deploy to github")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("githubUrl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("https://Underglaze-Blue:"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${GITHUB_TOKEN}")]),t._v("@github.com/yourname/repository.git\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yourname"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"youremail"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -A\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"deploy"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -f "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$githubUrl")]),t._v(" master:gh-pages "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 推送到github")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" -\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -rf dist\n")])])]),a("p",[t._v("至此，就完成了，可以 "),a("code",[t._v("push")]),t._v(" 代码之后，在 项目的 "),a("code",[t._v("actions")]),t._v(" 模块下 查看是否运行成功")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Underglaze-Blue/git-img@main/uPic/6RJQOq.png",alt:"6RJQOq"}})]),t._v(" "),a("p",[t._v("完成后，每次提交代码时，都会触发 actions 操作，会自动打包部署，我们只需要安心的写 markdown 就可以了~~")])])}),[],!1,null,null,null);s.default=e.exports}}]);